{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordancoursey/Documents/GitHub/Filos-React/src/App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.module.css';\nimport { Route, BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\nimport AddClientCockpit from './cockpits/AddClientCockpit/AddClientCockpit';\nimport MainPageCockpit from './cockpits/MainPageCockpit/MainPageCockpit';\nimport GeneralPatientCockpit from './cockpits/GeneralPatientCockpit/GeneralPatientCockpit';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newClientInfo: [{\n        id: '1',\n        name: 'Patient ID',\n        info: '',\n        placeHolder: 'Example: JA123456'\n      }, {\n        id: '2',\n        name: 'Confirm ID',\n        info: '',\n        placeHolder: 'Must Match Patient ID'\n      }, {\n        id: '3',\n        name: 'PBx Goal 1',\n        info: '',\n        placeHolder: 'Example: Aggressive Behavior'\n      }, {\n        id: '4',\n        name: 'PBx Goal 2',\n        info: '',\n        placeHolder: ''\n      }, {\n        id: '5',\n        name: 'PBx Goal 3',\n        info: '',\n        placeHolder: ''\n      }, {\n        id: '6',\n        name: 'FBx Goal 1',\n        info: '',\n        placeHolder: 'Example: Quiet Sitting'\n      }, {\n        id: '7',\n        name: 'FBx Goal 2',\n        info: '',\n        placeHolder: ''\n      }, {\n        id: '8',\n        name: 'CBx Goal 1',\n        info: '',\n        placeHolder: 'Example: Two Word Phrases'\n      }, {\n        id: '9',\n        name: 'CBx Goal 2',\n        info: '',\n        placeHolder: ''\n      }, {\n        id: '10',\n        name: 'CBx Goal 3',\n        info: '',\n        placeHolder: ''\n      }, {\n        id: '11',\n        name: 'CBx Goal 4',\n        info: '',\n        placeHolder: ''\n      }, {\n        id: '12',\n        name: 'CBx Goal 5',\n        info: '',\n        placeHolder: ''\n      }],\n      clientList: [],\n      clientIndex: 0,\n      redirectMain: false,\n      redirectAdd: false,\n      sessionData: {\n        date: '',\n        PBxCount: [0, 0, 0],\n        FBxInfo: ['', '', '', '', '', '']\n      },\n      currentCBx: [[false, false, false, false], [false, false, false, false], [true, false, true, false], [true, false, true, false], [true, false, true, false], [200, 1, 2, 3, 4]],\n      chartShowing: false\n    };\n\n    this.NewClientInfoHandler = (event, id) => {\n      const clientInfoIndex = this.state.newClientInfo.findIndex(p => {\n        return p.id === id;\n      });\n      const newClient = { ...this.state.newClientInfo[clientInfoIndex]\n      };\n      newClient.info = event.target.value;\n      const clientArr = [...this.state.newClientInfo];\n      clientArr[clientInfoIndex] = newClient;\n      this.setState({\n        newClientInfo: clientArr\n      });\n    };\n\n    this.AddClientHandler = (event, id) => {\n      let canAdd = false;\n      let toAdd = [];\n\n      if (this.state.newClientInfo[0].info === this.state.newClientInfo[1].info) {\n        canAdd = true;\n        if (this.state.newClientInfo[0].info === \"\") canAdd = false;\n      } //Will add all info, excluding 'Confirm ID' at index 1, to the Client Information Array \n\n\n      this.state.newClientInfo.forEach((currInfo, index) => {\n        toAdd = [...toAdd, currInfo.info];\n      });\n      const defaultCBxObj = [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [0, 1, 2, 3, 4]];\n      toAdd.push([[[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [0, 1, 2, 3, 4]], [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [1, 1, 2, 3, 4]], [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [2, 1, 2, 3, 4]], [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [3, 1, 2, 3, 4]], [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [4, 1, 2, 3, 4]]]); //toAdd.push(0, 0, 0);\n      //Checks if ID is already in the array\n\n      this.state.clientList.forEach(curr => {\n        if (curr[0] === toAdd[0]) canAdd = false;\n      });\n\n      if (canAdd) {\n        const newClientList = [...this.state.clientList, toAdd];\n        this.setState({\n          clientList: newClientList\n        });\n        const reset = [{\n          id: '1',\n          name: 'Patient ID',\n          info: '',\n          placeHolder: 'Example: JA123456'\n        }, {\n          id: '2',\n          name: 'Confirm ID',\n          info: '',\n          placeHolder: 'Must Match Patient ID'\n        }, {\n          id: '3',\n          name: 'PBx Goal 1',\n          info: '',\n          placeHolder: 'Example: Aggressive Behavior'\n        }, {\n          id: '4',\n          name: 'PBx Goal 2',\n          info: '',\n          placeHolder: ''\n        }, {\n          id: '5',\n          name: 'PBx Goal 3',\n          info: '',\n          placeHolder: ''\n        }, {\n          id: '6',\n          name: 'FBx Goal 1',\n          info: '',\n          placeHolder: 'Example: Quiet Sitting'\n        }, {\n          id: '7',\n          name: 'FBx Goal 2',\n          info: '',\n          placeHolder: ''\n        }, {\n          id: '8',\n          name: 'CBx Goal 1',\n          info: '',\n          placeHolder: 'Example: Two Word Phrases'\n        }, {\n          id: '9',\n          name: 'CBx Goal 2',\n          info: '',\n          placeHolder: ''\n        }, {\n          id: '10',\n          name: 'CBx Goal 3',\n          info: '',\n          placeHolder: ''\n        }, {\n          id: '11',\n          name: 'CBx Goal 4',\n          info: '',\n          placeHolder: ''\n        }, {\n          id: '12',\n          name: 'CBx Goal 5',\n          info: '',\n          placeHolder: ''\n        }];\n        this.setState({\n          newClientInfo: reset\n        });\n        this.setRedirectMain();\n      }\n    };\n\n    this.CBxChangeTable = eventKey => {\n      let old = this.state.currentCBx;\n      const test = this.state.clientList[this.state.clientIndex][12][eventKey];\n      this.setState({\n        currentCBx: test\n      });\n    };\n\n    this.CBxOpenModal = () => {\n      this.setState({\n        chartShowing: true\n      });\n    };\n\n    this.CBxCloseTable = () => {\n      this.setState({\n        chartShowing: false\n      });\n    };\n\n    this.CBxTableMethod = () => {\n      let refactoredArray = this.state.currentCBx;\n      let i;\n      let j;\n\n      for (i = 0; i < this.state.currentCBx.length - 1; ++i) {\n        //iterate over all Cbx's\n        for (j = 0; j < 6; ++j) {\n          // 5 trials\n          refactoredArray[i][j] = this.state.currentCBx[j][i];\n        }\n      }\n\n      console.log(refactoredArray);\n      let retValue = refactoredArray.map((currentTrial, index) => {\n        if (index === 5) return null;\n        return currentTrial.map((currentObject, index) => {\n          //case more than 9 entries\n          if (typeof currentObject === \"number\") {\n            return /*#__PURE__*/_jsxDEV(\"textarea\", {\n              readOnly: true,\n              value: currentObject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 20\n            }, this);\n          } else if (currentObject) return /*#__PURE__*/_jsxDEV(\"textarea\", {\n            readOnly: true,\n            value: \"Y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 42\n          }, this);else if (index < 9) return /*#__PURE__*/_jsxDEV(\"textarea\", {\n            readOnly: true,\n            value: \"N\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 38\n          }, this); //nine readonly text boxes from last time\n          else if (index === 9) {\n              //one mutable text box\n              return /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 20\n              }, this);\n            } else return null; //after 10 do not render any more\n\n        });\n      });\n      return retValue;\n    };\n\n    this.setRedirectMain = () => {\n      this.setState({\n        redirectMain: true\n      });\n    };\n\n    this.setRedirectAdd = () => {\n      this.setState({\n        redirectAdd: true\n      });\n    };\n\n    this.renderMainRedirect = () => {\n      if (this.state.redirectMain) {\n        this.setState({\n          redirectMain: false\n        });\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.renderAddRedirect = () => {\n      if (this.state.redirectAdd) {\n        this.setState({\n          redirectAdd: false\n        });\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/AddClient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.PatientClickedHandler = patient => {\n      let index = this.state.clientList.findIndex(p => {\n        return p === patient;\n      });\n      this.setState({\n        clientIndex: index\n      });\n    };\n\n    this.reduceHandler = index => {\n      console.log(index);\n      let tempSession = this.state.sessionData;\n      let tempCount = this.state.sessionData.PBxCount[index];\n\n      if (tempCount === 0) {\n        return;\n      }\n\n      tempCount--;\n      tempSession.PBxCount[index] = tempCount;\n      this.setState({\n        sessionData: tempSession\n      });\n    };\n\n    this.increaseHandler = index => {\n      let tempSession = this.state.sessionData;\n      let tempCount = tempSession.PBxCount[index];\n      tempCount++;\n      tempSession.PBxCount[index] = tempCount;\n      this.setState({\n        sessionData: tempSession\n      });\n    };\n\n    this.dateHandler = event => {\n      const tempSession = this.state.sessionData;\n      tempSession.date = event.target.value;\n      this.setState({\n        sessionData: tempSession\n      });\n    };\n\n    this.funcBehaviorHandler = (event, index) => {\n      const tempSession = this.state.sessionData;\n      tempSession.FBxInfo[index] = event.target.value;\n      this.setState({\n        sessionData: tempSession\n      });\n    };\n  }\n\n  render() {\n    let noClientAddedHeader = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"These are your current clients!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 31\n    }, this);\n\n    if (this.state.clientList.length === 0) {\n      noClientAddedHeader = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the Filos Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }, this);\n    }\n\n    const test = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Header,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Filos App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), noClientAddedHeader]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), this.renderMainRedirect(), this.renderAddRedirect()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.App,\n        children: [test(), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/AddClient\",\n          children: /*#__PURE__*/_jsxDEV(AddClientCockpit, {\n            clicked: this.AddClientHandler,\n            mainRender: this.setRedirectMain,\n            newClient: this.state.newClientInfo,\n            newInfoHandle: this.NewClientInfoHandler,\n            test: this.state.newClientInfo[0].info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(MainPageCockpit, {\n            addClientRender: this.setRedirectAdd,\n            userClicked: this.PatientClickedHandler,\n            clientList: this.state.clientList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ViewPatient\",\n          children: /*#__PURE__*/_jsxDEV(GeneralPatientCockpit, {\n            tableMaker: this.CBxTableMethod,\n            changeTable: this.CBxChangeTable,\n            closeTable: this.CBxCloseTable,\n            showChart: this.state.chartShowing,\n            openModal: this.CBxOpenModal,\n            mainRender: this.setRedirectMain,\n            cbxInfo: this.state.currentCBx,\n            clientArr: this.state.clientList[this.state.clientIndex],\n            pbArr: this.state.sessionData.PBxCount,\n            fbArr: this.state.sessionData.FBxInfo,\n            reduce: this.reduceHandler,\n            increase: this.increaseHandler,\n            dateChange: this.dateHandler,\n            funcHandle: this.funcBehaviorHandler,\n            date: this.state.sessionData.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordancoursey/Documents/GitHub/Filos-React/src/App.js"],"names":["React","Component","classes","Route","BrowserRouter","Router","Link","Redirect","AddClientCockpit","MainPageCockpit","GeneralPatientCockpit","render","App","state","newClientInfo","id","name","info","placeHolder","clientList","clientIndex","redirectMain","redirectAdd","sessionData","date","PBxCount","FBxInfo","currentCBx","chartShowing","NewClientInfoHandler","event","clientInfoIndex","findIndex","p","newClient","target","value","clientArr","setState","AddClientHandler","canAdd","toAdd","forEach","currInfo","index","defaultCBxObj","push","curr","newClientList","reset","setRedirectMain","CBxChangeTable","eventKey","old","test","CBxOpenModal","CBxCloseTable","CBxTableMethod","refactoredArray","i","j","length","console","log","retValue","map","currentTrial","currentObject","setRedirectAdd","renderMainRedirect","renderAddRedirect","PatientClickedHandler","patient","reduceHandler","tempSession","tempCount","increaseHandler","dateHandler","funcBehaviorHandler","noClientAddedHeader","Header"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport {Route, BrowserRouter as Router, Link, Redirect} from \"react-router-dom\";\nimport AddClientCockpit from './cockpits/AddClientCockpit/AddClientCockpit';\nimport MainPageCockpit from './cockpits/MainPageCockpit/MainPageCockpit';\nimport GeneralPatientCockpit from './cockpits/GeneralPatientCockpit/GeneralPatientCockpit';\nimport { render } from '@testing-library/react';\n\n\n\n\nclass App extends Component{\n\n  \n  state = {\n    newClientInfo : [\n        {id: '1', name: 'Patient ID', info: '', placeHolder: 'Example: JA123456'},\n        {id: '2', name: 'Confirm ID', info: '', placeHolder: 'Must Match Patient ID'},\n        {id: '3', name: 'PBx Goal 1', info: '', placeHolder: 'Example: Aggressive Behavior'},\n        {id: '4', name: 'PBx Goal 2', info: '', placeHolder: ''},\n        {id: '5', name: 'PBx Goal 3', info: '', placeHolder: ''},\n        {id: '6', name: 'FBx Goal 1', info: '', placeHolder: 'Example: Quiet Sitting'},\n        {id: '7', name: 'FBx Goal 2', info: '', placeHolder: ''},\n        {id: '8', name: 'CBx Goal 1', info: '', placeHolder: 'Example: Two Word Phrases'},\n        {id: '9', name: 'CBx Goal 2', info: '', placeHolder: ''},\n        {id: '10', name: 'CBx Goal 3', info: '', placeHolder: ''},\n        {id: '11', name: 'CBx Goal 4', info: '', placeHolder: ''},\n        {id: '12', name: 'CBx Goal 5', info: '', placeHolder: ''},\n    ],\n    clientList : [],\n    clientIndex: 0,\n    redirectMain: false,\n    redirectAdd: false,\n    sessionData : {\n      date: '', PBxCount: [0, 0, 0], FBxInfo: ['', '', '', '', '', '']\n    },\n    currentCBx:  [[false, false, false, false], [false, false, false, false], [true, false, true, false],  [true, false, true, false], [true, false, true, false], \n    [200,1,2,3,4]],\n    chartShowing: false\n  }\n\nNewClientInfoHandler = (event, id) => {\n  const clientInfoIndex = this.state.newClientInfo.findIndex(p => {\n    return p.id === id;\n  });\n\n  const newClient = {...this.state.newClientInfo[clientInfoIndex]};\n\n  newClient.info = event.target.value;\n\n  const clientArr = [...this.state.newClientInfo];\n  clientArr[clientInfoIndex] = newClient;\n\n  this.setState({newClientInfo: clientArr});\n}\n\nAddClientHandler = (event, id) => {\n  let canAdd = false;\n  let toAdd = [];\n\n  if(this.state.newClientInfo[0].info === this.state.newClientInfo[1].info){\n      canAdd = true;\n      if (this.state.newClientInfo[0].info === \"\") canAdd = false;\n  }\n\n  //Will add all info, excluding 'Confirm ID' at index 1, to the Client Information Array \n  this.state.newClientInfo.forEach((currInfo, index) => {\n      \n      toAdd = [...toAdd, currInfo.info];\n  });\n\n  const defaultCBxObj = [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [0,1,2,3,4]]\n\n  toAdd.push([[[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [0,1,2,3,4]], [[true, false, true, false], \n    [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [1,1,2,3,4]], [[true, false, true, false], [false, true, false, true], \n    [true, false, true, false], [true, false, true, false], [true, false, true, false], [2,1,2,3,4]], [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], \n    [true, false, true, false], [3,1,2,3,4]], [[true, false, true, false], [false, true, false, true], [true, false, true, false], [true, false, true, false], [true, false, true, false], [4,1,2,3,4]]]);\n\n  //toAdd.push(0, 0, 0);\n\n  //Checks if ID is already in the array\n  this.state.clientList.forEach((curr) => {\n      if (curr[0] === toAdd[0]) canAdd = false;\n  });\n\n  \n\n  if (canAdd){\n  const newClientList = [...this.state.clientList, toAdd];\n  this.setState({clientList: newClientList});\n\n\n  const reset = [\n    {id: '1', name: 'Patient ID', info: '', placeHolder: 'Example: JA123456'},\n    {id: '2', name: 'Confirm ID', info: '', placeHolder: 'Must Match Patient ID'},\n    {id: '3', name: 'PBx Goal 1', info: '', placeHolder: 'Example: Aggressive Behavior'},\n    {id: '4', name: 'PBx Goal 2', info: '', placeHolder: ''},\n    {id: '5', name: 'PBx Goal 3', info: '', placeHolder: ''},\n    {id: '6', name: 'FBx Goal 1', info: '', placeHolder: 'Example: Quiet Sitting'},\n    {id: '7', name: 'FBx Goal 2', info: '', placeHolder: ''},\n    {id: '8', name: 'CBx Goal 1', info: '', placeHolder: 'Example: Two Word Phrases'},\n    {id: '9', name: 'CBx Goal 2', info: '', placeHolder: ''},\n    {id: '10', name: 'CBx Goal 3', info: '', placeHolder: ''},\n    {id: '11', name: 'CBx Goal 4', info: '', placeHolder: ''},\n    {id: '12', name: 'CBx Goal 5', info: '', placeHolder: ''},\n];\n  this.setState({newClientInfo: reset})\n\n  this.setRedirectMain();\n  }\n\n}\n\n  CBxChangeTable = (eventKey) => {\n    let old = this.state.currentCBx;\n    const test  = this.state.clientList[this.state.clientIndex][12][eventKey]\n    this.setState({currentCBx: test});\n  }\n\n  CBxOpenModal = () => {\n    this.setState({chartShowing: true});\n  }\n\n  CBxCloseTable = () => {\n    this.setState({chartShowing: false});\n  }\n\n  CBxTableMethod = () => {\n    let refactoredArray = this.state.currentCBx;\n    let i;\n    let j;\n    for (i = 0; i < this.state.currentCBx.length - 1; ++i){ //iterate over all Cbx's\n      for (j = 0; j < 6; ++j){ // 5 trials\n        refactoredArray[i][j] = this.state.currentCBx[j][i]\n      }\n    }\n\n    console.log(refactoredArray)\n    let retValue = refactoredArray.map((currentTrial, index) => {\n      if (index === 5) return null;\n      return currentTrial.map((currentObject, index) => { //case more than 9 entries\n          if (typeof currentObject === \"number\"){\n            return <textarea readOnly value = {currentObject}></textarea>\n          }\n          else if (currentObject) return <textarea readOnly value = \"Y\"></textarea>\n          else if (index < 9) return <textarea readOnly value = \"N\"></textarea> //nine readonly text boxes from last time\n          else if (index === 9){ //one mutable text box\n            return <textarea></textarea> \n          }\n          else return null; //after 10 do not render any more\n      })\n  })\n  \n  return retValue;\n  }\n\n  setRedirectMain = () => {\n    this.setState({redirectMain: true})\n  }\n\n  setRedirectAdd = () => {\n    this.setState({redirectAdd: true})\n  }\n\n\n  renderMainRedirect = () => {\n    if (this.state.redirectMain){\n      this.setState({redirectMain: false})\n      return <Redirect to='/'/>\n    }\n    \n  }\n\n  renderAddRedirect = () => {\n    if (this.state.redirectAdd){\n      this.setState({redirectAdd: false})\n      return <Redirect to ='/AddClient'/>\n    }\n  }\n\n\n  PatientClickedHandler = (patient) => {\n    let index = this.state.clientList.findIndex(p => {\n      return p === patient;\n    });\n    this.setState({clientIndex: index});\n  }\n\n  reduceHandler = (index) => {\n    console.log(index);\n    let tempSession = this.state.sessionData;\n    let tempCount = this.state.sessionData.PBxCount[index];\n\n    if(tempCount === 0){\n      return;\n    }\n\n    tempCount--;\n    tempSession.PBxCount[index] = tempCount;\n    \n    this.setState({sessionData: tempSession});\n  }\n\n  increaseHandler = (index) => {\n    let tempSession = this.state.sessionData;\n    let tempCount = tempSession.PBxCount[index];\n    tempCount++;\n    tempSession.PBxCount[index] = tempCount;\n    this.setState({sessionData: tempSession});\n  }\n\n  dateHandler = (event) => {\n    const tempSession = this.state.sessionData;\n    tempSession.date = event.target.value;\n    this.setState({sessionData: tempSession});\n  }\n\n  funcBehaviorHandler = (event, index) => {\n    const tempSession = this.state.sessionData;\n    tempSession.FBxInfo[index] = event.target.value;\n    this.setState({sessionData: tempSession});\n  }\n\n\n\n  render () {\n    \n    let noClientAddedHeader = <p>These are your current clients!</p>;\n    if (this.state.clientList.length === 0){\n    noClientAddedHeader = <p>Welcome to the Filos Client</p>;\n    }\n\n\n    const test  = () => (\n      <div className={classes.Header}>\n        <header>\n          <h1>\n            Filos App\n          </h1>\n          {noClientAddedHeader}\n        </header>\n        {this.renderMainRedirect()}\n        {this.renderAddRedirect()}\n      </div>\n\n    );\n\n    return (\n      <Router>\n        <div className = {classes.App}>\n          {test()}\n          <Route path = '/AddClient'>\n            <AddClientCockpit\n              clicked = {this.AddClientHandler}\n              mainRender = {this.setRedirectMain}\n              newClient={this.state.newClientInfo}\n              newInfoHandle={this.NewClientInfoHandler} \n              test={this.state.newClientInfo[0].info}/>\n          </Route>\n          <Route path = '/' exact>\n            <MainPageCockpit\n            addClientRender = {this.setRedirectAdd}\n            userClicked = {this.PatientClickedHandler}\n            clientList = {this.state.clientList}/>\n          </Route> \n          <Route path = '/ViewPatient'>\n            <GeneralPatientCockpit\n            tableMaker = {this.CBxTableMethod}\n            changeTable = {this.CBxChangeTable}\n            closeTable = {this.CBxCloseTable}\n            showChart = {this.state.chartShowing}\n            openModal = {this.CBxOpenModal}\n            mainRender = {this.setRedirectMain}\n            cbxInfo = {this.state.currentCBx}\n            clientArr = {this.state.clientList[this.state.clientIndex]}\n            pbArr = {this.state.sessionData.PBxCount}\n            fbArr = {this.state.sessionData.FBxInfo}\n            reduce = {this.reduceHandler}\n            increase = {this.increaseHandler}\n            dateChange = {this.dateHandler}\n            funcHandle = {this.funcBehaviorHandler}\n            date = {this.state.sessionData.date}\n            />\n          </Route> \n        </div>\n        \n      </Router>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}